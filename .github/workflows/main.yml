name: main
on: push

jobs:
  main:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Check out the main branch
      uses: actions/checkout@v3
      with:
        ref: master
    - name: Install Puppeteer dependencies
      if: ${{matrix.os == 'ubuntu-latest'}}
      run: |
        set -x
        # Install Chromium dependencies needed for PDF printing
        sudo apt install libgbm1 -y
    - name: Run the workflow (Bash)
      if: ${{matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'}}
      run: |
        set -x
        set -e
        # Configure Git for the push from the workflow to the repository
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"

        # Run the command
        npm install
        node .

        # Add the command output to the commit
        git add screenshot-*.png
        git add screenshot-*.jpeg
        git status
        
        # Reset unstaged changes to prevent `git commit` from yelling if there's e.g. `package-lock.json` or caches
        git checkout -- .
        
        # Commit the added changes to the repository associated with this workflow (if any)
        if git diff-index --quiet HEAD --; then
          exit
        fi
        git commit -m "Commit the screenshots"
        
        # Rebase if the branch has meanwhile changed (fail if there are automatically irresolvable merge conflicts)
        git pull --rebase
        
        # Push the commit to the repository associated with this workflow
        git push
    - name: Run the workflow (Posh)
      if: ${{matrix.os == 'windows-latest'}}
      run: |
        # Run after macOS and Ubuntu because Git doesn't handle the concurrency
        Sleep -Seconds 10
        # Do not use `Error`, because it crashes GitHub Actions - am using `$LastExitCode` instead, possibly due to the above
        $ErrorActionPreference = "SilentlyContinue"
        Set-PSDebug -Trace 1
        # Configure Git for the push from the workflow to the repository
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        $LastExitCode
        git config --global user.name "github-actions[bot]"
        $LastExitCode
        # Rebase if the branch has meanwhile changed (fail if there are automatically irresolvable merge conflicts)
        git pull --rebase
        # Run the command
        npm install
        $LastExitCode
        node .
        $LastExitCode
        # Add the command output to the commit
        git add screenshot-*.png
        $LastExitCode
        git add screenshot-*.jpeg
        $LastExitCode
        git status
        $LastExitCode
        # Reset unstaged changes to prevent `git commit` from yelling if there's e.g. `package-lock.json` or caches
        git checkout -- .
        $LastExitCode
        # Commit the added changes to the repository associated with this workflow (if any)
        If (git diff-index --quiet HEAD --) {
          exit
        }
        git commit -m "Commit the screenshots"
        $LastExitCode
        # Rebase if the branch has meanwhile changed (fail if there are automatically irresolvable merge conflicts)
        git pull --rebase
        $LastExitCode
        # Push the commit to the repository associated with this workflow
        git push
        $LastExitCode
